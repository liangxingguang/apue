1、不带缓冲：每个read和write都要调用内核的一个系统调用
2、文件描述符是个非负整数，是对文件的一个引用
3、STDIN_FILENO,STDOUT_FILENO,STDERR_FILENO分别代表标准输入，标准输出和出错
输出
-----------------------------------------------------------
4、函数
-----------------------------------------------------------
open函数
#include<fcntl.h>
int open(const char *pathname, int oflag, mode_t mode)
oflag的选项如下：
O_RDONLY	只读打开		
O_WDONLY	只写打开
O_RDWR		读写打开
-------------------------------------------------------------
O_APPEND	追加到文件尾端
O_CREAT		若文件不存在，创建文件
O_EXCL		与O_CREAT组合，若文件存在，打开失败
O_TRUNC		将文件截短为零
O_NOCTTY	
O_NONBLOCE	以非阻塞方式打开文件
-------------------------------------------------------------
O_DSYNC		每次io等待物理io完成
O_RSYNC		使每个以文件描述符作为参数的read操作等待直到任何对文件的同一部分
			进行的未决操作都完成
O_SYNC		每次io都等到物理io完成，包括文件属性的更新

open返回的一定最小可用描述符。

--------------------------------------------------------------------
creat

#include<fcntl.h>
int creat(const char *pathname, mode_t mode)
--------------------------------------------------------------------
close

#include<unistd.h>
int close(int filedes)
关闭文件会释放该进程在该文件上的记录锁

